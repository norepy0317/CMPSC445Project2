<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tariff Impact Calculator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .calculator {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            text-align: center;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .results {
            margin-top: 20px;
            padding: 15px;
            background-color: #f9f9f9;
            border-radius: 4px;
            display: none;
        }
        .result-item {
            margin-bottom: 10px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        .result-item:last-child {
            border-bottom: none;
            font-weight: bold;
            color: #2c3e50;
        }
        .chart-container {
            margin-top: 30px;
            height: 300px;
        }
    </style>
</head>
<body>
    <div class="calculator">
        <h1>Tariff Impact Calculator</h1>
        <p>Estimate how tariffs will affect product prices</p>
        
        <div class="form-group">
            <label for="basePrice">Base Price ($):</label>
            <input type="number" id="basePrice" placeholder="Enter the product's base price" step="0.01" min="0">
        </div>
        
        <div class="form-group">
            <label for="tariffPercentage">Tariff Percentage (%):</label>
            <input type="number" id="tariffPercentage" placeholder="Enter tariff percentage" step="0.1" min="0">
        </div>
        
        <button onclick="calculateTariff()">Calculate Price Impact</button>
        
        <div id="results" class="results">
            <h2>Results</h2>
            <div class="result-item">
                Base Price: <span id="resultBasePrice"></span>
            </div>
            <div class="result-item">
                Tariff Percentage: <span id="resultTariffPercentage"></span>
            </div>
            <div class="result-item">
                Price Increase: <span id="resultPriceIncrease"></span>
            </div>
            <div class="result-item">
                Final Price After Tariff: <span id="resultFinalPrice"></span>
            </div>
        </div>
    </div>

    <div class="chart-container">
        <canvas id="tariffChart"></canvas>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // This would normally be handled by your Python backend
        // For demo purposes, we're using a simplified calculation
        function predictPriceIncrease(basePrice, tariffPercentage) {
            // In a real implementation, this would call your Python API
            // For now, we'll use a simple calculation that approximates the ML model
            return basePrice * (tariffPercentage / 100);
        }

        function calculateTariff() {
            // Get input values
            const basePrice = parseFloat(document.getElementById('basePrice').value);
            const tariffPercentage = parseFloat(document.getElementById('tariffPercentage').value);
            
            // Validate inputs
            if (isNaN(basePrice) || isNaN(tariffPercentage) || basePrice < 0 || tariffPercentage < 0) {
                alert("Please enter valid positive numbers for both fields");
                return;
            }
            
            // Calculate results
            const priceIncrease = predictPriceIncrease(basePrice, tariffPercentage);
            const finalPrice = basePrice + priceIncrease;
            
            // Display results
            document.getElementById('resultBasePrice').textContent = `$${basePrice.toFixed(2)}`;
            document.getElementById('resultTariffPercentage').textContent = `${tariffPercentage.toFixed(1)}%`;
            document.getElementById('resultPriceIncrease').textContent = `$${priceIncrease.toFixed(2)}`;
            document.getElementById('resultFinalPrice').textContent = `$${finalPrice.toFixed(2)}`;
            
            // Show results section
            document.getElementById('results').style.display = 'block';
            
            // Update chart
            updateChart(basePrice, tariffPercentage, finalPrice);
        }

        // Chart initialization
        const ctx = document.getElementById('tariffChart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Base Price', 'Price Increase', 'Final Price'],
                datasets: [{
                    label: 'Price Breakdown',
                    backgroundColor: ['#3498db', '#e74c3c', '#2ecc71'],
                    data: [0, 0, 0]
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Amount ($)'
                        }
                    }
                }
            }
        });

        function updateChart(basePrice, priceIncrease, finalPrice) {
            chart.data.datasets[0].data = [basePrice, priceIncrease, finalPrice];
            chart.update();
        }
    </script>
</body>
</html>
